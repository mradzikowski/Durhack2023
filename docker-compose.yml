version: "3.8"

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/usr/src/app/
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    restart: on-failure
#
#  data_injector:
#    container_name: data_injector
#    build:
#      context: ./data_injector
#      dockerfile: Dockerfile
#    env_file:
#      - ./.env
#    restart: on-failure
#
#  data_processor:
#    container_name: data_processor
#    build:
#      context: ./data_processor
#      dockerfile: Dockerfile
#    env_file:
#      - ./.env
#    restart: on-failure
#
#  rabbitmq:
#    container_name: rabbitmq
#    image: rabbitmq:3.12-management
#    ports:
#      - "5672:5672"

  db:
    container_name: db
    image: postgres:14-alpine
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${SQL_DB} -U ${POSTGRES_USER}" ]
      interval: 3s
      timeout: 1s
      retries: 5
